{% extends '../BaseTransformer.jinja' %}

{% block before_class %}

    {% for i, (name, step) in enumerate(steps) %}
        {{ step.port(classname=name, embedded=True, shared_buffer=True, language=language) }}
    {% endfor %}

{% endblock %}

{% block constructor %}

    /**
     * Constructor
     */
    {{ classname }}() :
        {% for i, step in enumerate(steps) %}
            {% if i > 0 %},{% endif %} step{{ i }}(buffer)
        {% endfor %}
    {

    }

{% endblock %}

{% block transform %}

    // allocate enough space for the largest step
    memcpy(X, source, sizeof(float) * {{ input_dim }});

    return
        {% for i, (name, step) in enumerate(steps) %}
            // {{ name }}
            {% if i > 0 %} && {% endif %} step{{ i }}.transform(X)
        {% endfor %};

{% endblock %}

{% block protected %}

    {% for i, (name, step) in enumerate(steps) %}
        {{ name }} step{{ i }};
    {% endfor %}

{% endblock %}