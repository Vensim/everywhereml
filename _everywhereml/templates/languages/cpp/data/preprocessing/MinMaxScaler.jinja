{% extends './BaseTransformer.jinja' %}

{% block transform %}
    for (uint16_t i = 0; i < {{ input_dim }}; i++) {
        source[i] = (source[i] - m[i % {{ num_features }}]) * invRange[i % {{ num_features }}] + {{ features_range[0] }};
    }

{% endblock %}

{% block protected %}

    const float m[{{ min | shape }}] = {{ min | to_array }};
    // instead of dividing by range, multiply by 1/range, which is faster
    const float invRange[{{ (1 / ranges) | shape }}] = {{ (1 / ranges) | to_array }};

{% endblock %}